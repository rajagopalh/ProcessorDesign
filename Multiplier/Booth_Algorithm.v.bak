
module booth_algorithm(x_j, x_j_1, y_i, y_i_1, y_i_p_1, PP-J);  

wire Neg, x1_b, z, x2_b;

Neg = y_i_p_1;

x1_b = y_i_1 ^~ y_i;

z = y_i_p_1 ^~ y_i;

x2_b = y_i_1 ^ y_i;

PP_j = (x1_b & (Neg ^~ x_j)) ~& (z & x2_b & (Neg ^~ x_j_1));

endmodule // booth_decoder

module partial_product_generator(x, y, PP);
  
  for (i = 0; i < 8 ; i = i+1)
    for ( j = 0 ; j < 8 ; j = j+1)
      
  
endmodule